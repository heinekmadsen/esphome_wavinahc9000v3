# YAML tools for Wavin AHC9000: chunked text_sensors and helper services
# Include this during onboarding to auto-generate config, then remove/disable after.

text_sensor:
  # Main full suggestion (may be truncated in HA if long)
  - platform: wavin_ahc9000
    wavin_ahc9000_id: wavin
    name: "Wavin YAML Suggestion"

  # Chunked YAML for climate (2 entities per chunk)
  - platform: template
    id: yaml_climate_1
    name: "Wavin YAML Climate 1"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(0, 2);
  - platform: template
    id: yaml_climate_2
    name: "Wavin YAML Climate 2"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(2, 2);
  - platform: template
    id: yaml_climate_3
    name: "Wavin YAML Climate 3"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(4, 2);
  - platform: template
    id: yaml_climate_4
    name: "Wavin YAML Climate 4"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(6, 2);
  - platform: template
    id: yaml_climate_5
    name: "Wavin YAML Climate 5"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(8, 2);
  - platform: template
    id: yaml_climate_6
    name: "Wavin YAML Climate 6"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(10, 2);
  - platform: template
    id: yaml_climate_7
    name: "Wavin YAML Climate 7"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(12, 2);
  - platform: template
    id: yaml_climate_8
    name: "Wavin YAML Climate 8"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_climate_chunk(14, 2);

  # Chunked YAML for battery
  - platform: template
    id: yaml_battery_1
    name: "Wavin YAML Battery 1"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(0, 2);
  - platform: template
    id: yaml_battery_2
    name: "Wavin YAML Battery 2"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(2, 2);
  - platform: template
    id: yaml_battery_3
    name: "Wavin YAML Battery 3"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(4, 2);
  - platform: template
    id: yaml_battery_4
    name: "Wavin YAML Battery 4"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(6, 2);
  - platform: template
    id: yaml_battery_5
    name: "Wavin YAML Battery 5"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(8, 2);
  - platform: template
    id: yaml_battery_6
    name: "Wavin YAML Battery 6"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(10, 2);
  - platform: template
    id: yaml_battery_7
    name: "Wavin YAML Battery 7"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(12, 2);
  - platform: template
    id: yaml_battery_8
    name: "Wavin YAML Battery 8"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_battery_chunk(14, 2);

  # Chunked YAML for temperature
  - platform: template
    id: yaml_temperature_1
    name: "Wavin YAML Temperature 1"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(0, 2);
  - platform: template
    id: yaml_temperature_2
    name: "Wavin YAML Temperature 2"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(2, 2);
  - platform: template
    id: yaml_temperature_3
    name: "Wavin YAML Temperature 3"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(4, 2);
  - platform: template
    id: yaml_temperature_4
    name: "Wavin YAML Temperature 4"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(6, 2);
  - platform: template
    id: yaml_temperature_5
    name: "Wavin YAML Temperature 5"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(8, 2);
  - platform: template
    id: yaml_temperature_6
    name: "Wavin YAML Temperature 6"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(10, 2);
  - platform: template
    id: yaml_temperature_7
    name: "Wavin YAML Temperature 7"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(12, 2);
  - platform: template
    id: yaml_temperature_8
    name: "Wavin YAML Temperature 8"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_temperature_chunk(14, 2);

  # Chunked YAML for comfort numbers (setpoints)
  - platform: template
    id: yaml_numbers_comfort_1
    name: "Wavin YAML Numbers Comfort 1"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_comfort_chunk(0, 2);
  - platform: template
    id: yaml_numbers_comfort_2
    name: "Wavin YAML Numbers Comfort 2"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_comfort_chunk(2, 2);
  - platform: template
    id: yaml_numbers_comfort_3
    name: "Wavin YAML Numbers Comfort 3"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_comfort_chunk(4, 2);
  - platform: template
    id: yaml_numbers_comfort_4
    name: "Wavin YAML Numbers Comfort 4"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_comfort_chunk(6, 2);

  # Chunked YAML for standby numbers
  - platform: template
    id: yaml_numbers_standby_1
    name: "Wavin YAML Numbers Standby 1"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_standby_chunk(0, 2);
  - platform: template
    id: yaml_numbers_standby_2
    name: "Wavin YAML Numbers Standby 2"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_standby_chunk(2, 2);
  - platform: template
    id: yaml_numbers_standby_3
    name: "Wavin YAML Numbers Standby 3"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_standby_chunk(4, 2);
  - platform: template
    id: yaml_numbers_standby_4
    name: "Wavin YAML Numbers Standby 4"
    update_interval: never
    lambda: |-
      return id(wavin).get_yaml_numbers_standby_chunk(6, 2);

api:
  services:
    - service: wavin_generate_yaml
      then:
        - lambda: |-
            id(wavin).generate_yaml_suggestion();
    - service: wavin_publish_yaml_text_sensors
      then:
        - lambda: |-
            id(wavin).generate_yaml_suggestion();
            id(yaml_climate_1).publish_state(id(wavin).get_yaml_climate_chunk(0, 2));
            id(yaml_climate_2).publish_state(id(wavin).get_yaml_climate_chunk(2, 2));
            id(yaml_climate_3).publish_state(id(wavin).get_yaml_climate_chunk(4, 2));
            id(yaml_climate_4).publish_state(id(wavin).get_yaml_climate_chunk(6, 2));
            id(yaml_climate_5).publish_state(id(wavin).get_yaml_climate_chunk(8, 2));
            id(yaml_climate_6).publish_state(id(wavin).get_yaml_climate_chunk(10, 2));
            id(yaml_climate_7).publish_state(id(wavin).get_yaml_climate_chunk(12, 2));
            id(yaml_climate_8).publish_state(id(wavin).get_yaml_climate_chunk(14, 2));
            id(yaml_battery_1).publish_state(id(wavin).get_yaml_battery_chunk(0, 2));
            id(yaml_battery_2).publish_state(id(wavin).get_yaml_battery_chunk(2, 2));
            id(yaml_battery_3).publish_state(id(wavin).get_yaml_battery_chunk(4, 2));
            id(yaml_battery_4).publish_state(id(wavin).get_yaml_battery_chunk(6, 2));
            id(yaml_battery_5).publish_state(id(wavin).get_yaml_battery_chunk(8, 2));
            id(yaml_battery_6).publish_state(id(wavin).get_yaml_battery_chunk(10, 2));
            id(yaml_battery_7).publish_state(id(wavin).get_yaml_battery_chunk(12, 2));
            id(yaml_battery_8).publish_state(id(wavin).get_yaml_battery_chunk(14, 2));
            id(yaml_temperature_1).publish_state(id(wavin).get_yaml_temperature_chunk(0, 2));
            id(yaml_temperature_2).publish_state(id(wavin).get_yaml_temperature_chunk(2, 2));
            id(yaml_temperature_3).publish_state(id(wavin).get_yaml_temperature_chunk(4, 2));
            id(yaml_temperature_4).publish_state(id(wavin).get_yaml_temperature_chunk(6, 2));
            id(yaml_temperature_5).publish_state(id(wavin).get_yaml_temperature_chunk(8, 2));
            id(yaml_temperature_6).publish_state(id(wavin).get_yaml_temperature_chunk(10, 2));
            id(yaml_temperature_7).publish_state(id(wavin).get_yaml_temperature_chunk(12, 2));
            id(yaml_temperature_8).publish_state(id(wavin).get_yaml_temperature_chunk(14, 2));
            id(yaml_numbers_comfort_1).publish_state(id(wavin).get_yaml_numbers_comfort_chunk(0, 2));
            id(yaml_numbers_comfort_2).publish_state(id(wavin).get_yaml_numbers_comfort_chunk(2, 2));
            id(yaml_numbers_comfort_3).publish_state(id(wavin).get_yaml_numbers_comfort_chunk(4, 2));
            id(yaml_numbers_comfort_4).publish_state(id(wavin).get_yaml_numbers_comfort_chunk(6, 2));
            id(yaml_numbers_standby_1).publish_state(id(wavin).get_yaml_numbers_standby_chunk(0, 2));
            id(yaml_numbers_standby_2).publish_state(id(wavin).get_yaml_numbers_standby_chunk(2, 2));
            id(yaml_numbers_standby_3).publish_state(id(wavin).get_yaml_numbers_standby_chunk(4, 2));
            id(yaml_numbers_standby_4).publish_state(id(wavin).get_yaml_numbers_standby_chunk(6, 2));
    - service: wavin_notify_yaml_chunks
      then:
        - lambda: |-
            id(wavin).generate_yaml_suggestion();
        # Climate
        - if:
            condition:
              lambda: 'return id(wavin).get_yaml_active_count() > 0;'
            then:
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Wavin YAML (climate 1)
                    message: !lambda 'return id(wavin).get_yaml_climate_chunk(0, 2);'
        - if:
            condition:
              lambda: 'return id(wavin).get_yaml_active_count() > 2;'
            then:
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Wavin YAML (climate 2)
                    message: !lambda 'return id(wavin).get_yaml_climate_chunk(2, 2);'
        # Battery
        - if:
            condition:
              lambda: 'return id(wavin).get_yaml_active_count() > 0;'
            then:
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Wavin YAML (battery 1)
                    message: !lambda 'return id(wavin).get_yaml_battery_chunk(0, 2);'
        - if:
            condition:
              lambda: 'return id(wavin).get_yaml_active_count() > 2;'
            then:
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Wavin YAML (battery 2)
                    message: !lambda 'return id(wavin).get_yaml_battery_chunk(2, 2);'
        # Temperature
        - if:
            condition:
              lambda: 'return id(wavin).get_yaml_active_count() > 0;'
            then:
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Wavin YAML (temperature 1)
                    message: !lambda 'return id(wavin).get_yaml_temperature_chunk(0, 2);'
        - if:
            condition:
              lambda: 'return id(wavin).get_yaml_active_count() > 2;'
            then:
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Wavin YAML (temperature 2)
                    message: !lambda 'return id(wavin).get_yaml_temperature_chunk(2, 2);'
